((3) 0 () 6 ("\n" (u . "   ") (c (u . "Search Terms")) (c (u . "Registers")) (c (u . "Peripherals")) (c (u . "UART"))) () (h - () (metas h - () (here-path u . "/home/ajanse/dev/os-book/documentation.html.pm")) (doc c root c (c body c (c headline c (u . "This is my title")) c (? . 0) c (c publish-date c (u . "Saturday, 13th June, 2015")) c (? . 0) c (q meta ((toc "true"))) c (? . 0) c (? . 0) c (u . "Almost everything you'll need is in the [ARMv8 Architecture Reference Manual][armv8-arm] and [Cortex-72A Processor Technical Reference Manual][cortex72a-trm]. I highly recommend downloading a copy of each PDF. Some of their contents are reproduced below.") c (? . 0) c (? . 0) c (u . "[armv8-arm]: https://static.docs.arm.com/ddi0487/ca/DDI0487C_a_armv8_arm.pdf") c (? . 0) c (u . "[cortex72a-trm]: https://static.docs.arm.com/100095/0003/cortex_a72_mpcore_trm_100095_0003_05_en.pdf") c (? . 0) c (? . 0) c (c h2 c (c (c id c (u . "g3105"))) ? . 2) c (? . 0) c (? . 0) c (u . "| Term | Definition") c (? . 0) c (u . "|------|------------") c (? . 0) c (u . "| cortex-72a | the processor used by the Raspberry Pi 4") c (? . 0) c (u . "| broadcom bcm2711 | same as above (???)") c (? . 0) c (u . "| instruction encoding | the encoding for translating assembly into machine code") c (? . 0) c (? . 0) c (c h2 c (c (c id c (u . "g3106"))) ? . 3) c (? . 0) c (? . 0) c (u . "[Cortex-72A Manual, Page 75](https://static.docs.arm.com/100095/0003/cortex_a72_mpcore_trm_100095_0003_05_en.pdf#page=75&zoom=auto,-12,749)") c (? . 0) c (? . 0) c (u . "This is the fastest place to store data.") c (? . 0) c (? . 0) c (u . "| Register | Description") c (? . 0) c (u . "|----------|-------------") c (? . 0) c (u . "| [MPIDR_EL1](https://static.docs.arm.com/100095/0003/cortex_a72_mpcore_trm_100095_0003_05_en.pdf#page=90&zoom=auto,-12,258) | This read-only identification register, among other things, provides a core identification number ([how to access](https://static.docs.arm.com/ddi0487/ca/DDI0487C_a_armv8_arm.pdf#page=2620&zoom=110,-33,627))") c (? . 0) c (u . "| r0-15 | General-purpose registers. Because we're writing our own assembly language, feel free to use these however you want") c (? . 0) c (? . 0) c (c h2 c (c (c id c (u . "g3107"))) ? . 4) c (? . 0) c (? . 0) c (u . "Many peripherals (external io stuff) are accessible through special memory addresses. The Raspberry Pi 4's peripherals document has not yet been released, so for now we'll use the RPi 3's [BCM2835 ARM Peripherals Manual](https://www.raspberrypi.org/app/uploads/2012/02/BCM2835-ARM-Peripherals.pdf).") c (? . 0) c (? . 0) c (c h3 c (c (c id c (u . "g3108"))) ? . 5) c (? . 0) c (? . 0) c (u . "[BCM2835 ARM Peripherals, Page 175](https://www.raspberrypi.org/app/uploads/2012/02/BCM2835-ARM-Peripherals.pdf#page=175&zoom=110,-110,807)") c (? . 0) c (u . "[PrimeCell UART Technical Reference Manual](http://infocenter.arm.com/help/topic/com.arm.doc.ddi0183g/DDI0183G_uart_pl011_r1p5_trm.pdf#page=47&zoom=auto,-29,502)") c (? . 0) c (? . 0) c (u . "[Register addresses](https://www.raspberrypi.org/app/uploads/2012/02/BCM2835-ARM-Peripherals.pdf#page=177&zoom=110,-110,280), with offset `0xFE201000` on raspi4") c (? . 0) c (? . 0) c (u . "On QEMU, UART data can be sent/received by simply writing to/from `0xFE201000+0`, but on real hardware, you'll need to do some setup first.") c (? . 0) c (? . 0) c (u . "For the following setup steps, use the BCM2836 Peripheral Manual's [GPIO address section](https://www.raspberrypi.org/app/uploads/2012/02/BCM2835-ARM-Peripherals.pdf#page=90&zoom=110,-110,652), replacing `0x7E20` with `0xFE20` for the raspi4.  Also see the manual's [UART address section](https://www.raspberrypi.org/app/uploads/2012/02/BCM2835-ARM-Peripherals.pdf#page=177&zoom=110,-110,280).") c (? . 0) c (u . "1. disable UART using the [UART control register](https://www.raspberrypi.org/app/uploads/2012/02/BCM2835-ARM-Peripherals.pdf#page=185&zoom=110,-110,325)") c (? . 0) c (u . "2. disable GPIO pin pull up/down") c (? . 0) c (u . "3. delay for 150 cycles (create a loop with a countdown)") c (? . 0) c (u . "4. disable GPIO pin pull up/down clock 0") c (? . 0) c (u . "5. delay for 150 cycles") c (? . 0) c (u . "6. disable GPIO pin pull up/down clock 0 (yeah, again; idk why)") c (? . 0) c (u . "7. clear all pending interrupts using the [UART interrupt clear register](https://www.raspberrypi.org/app/uploads/2012/02/BCM2835-ARM-Peripherals.pdf#page=192&zoom=110,-70,735) (write zero to the bits representing each interrupt you want to clear)") c (? . 0) c (u . "8. set baud rate to 115200 given a 3 Mhz clock (follow the PrimeCell UART Manual's [baud rate calculation example](http://infocenter.arm.com/help/topic/com.arm.doc.ddi0183g/DDI0183G_uart_pl011_r1p5_trm.pdf#page=56&zoom=auto,-29,199))") c (? . 0) c (? . 1) c (u . "1. write the baud rate divisor integer (BDR_I) to the [UART integer baud rate divisor register](https://www.raspberrypi.org/app/uploads/2012/02/BCM2835-ARM-Peripherals.pdf#page=183&zoom=110,-70,479)") c (? . 0) c (? . 1) c (u . "2. write the calculated fractional part (m) to the [UART fractional baud rate divisor register](https://www.raspberrypi.org/app/uploads/2012/02/BCM2835-ARM-Peripherals.pdf#page=183&zoom=110,-110,255)") c (? . 0) c (u . "9. enable FIFO and 8-bit data transmission using the [UART line control register](https://www.raspberrypi.org/app/uploads/2012/02/BCM2835-ARM-Peripherals.pdf#page=184&zoom=110,-70,645)") c (? . 0) c (u . "10. mask all interrupts using the [TODO...]") c (? . 0) c (? . 0) c (? . 0) c (u . "## Instructions") c (? . 0) c (? . 0) c (u . "[ARMv8 Manual, Page 223](https://static.docs.arm.com/ddi0487/ca/DDI0487C_a_armv8_arm.pdf#page=223&zoom=auto,-4,576)") c (? . 0) c (? . 0) c (u . "### Misc") c (? . 0) c (? . 0) c (u . "#### Constants (\"immediate\" values)") c (? . 0) c (? . 0) c (u . "The aarch64 instruction encoding is 32 bits wide, so we cannot store large constants into registers in a single command.") c (? . 0) c (? . 0) c (u . "#### Logic Instructions (and/or/xor/etc)") c (? . 0) c (? . 0) c (u . "[ARMv8 Manual, Page 226](https://static.docs.arm.com/ddi0487/ca/DDI0487C_a_armv8_arm.pdf#page=226)") c (? . 0) c (? . 0) c (u . "#### Move System Register (MSR)") c (? . 0) c (? . 0) c (u . "[ARMv8 Manual, Page 802](https://static.docs.arm.com/ddi0487/ca/DDI0487C_a_armv8_arm.pdf#page=802)") c (? . 0) c (? . 0) c (u . "See the register summaries above for the parameters needed to access a specific system register.") c (? . 0) c (? . 0) c (u . "### Load/Store") c (? . 0) c (u . "> [Rose Lowe cs2310 Slideshow](https://people.cs.clemson.edu/~rlowe/cs2310/notes/ln_arm_load_store.pdf)") c (? . 0) c (? . 0) c (u . "#### Store, Pre-Index") c (? . 0) c (? . 0) c (u . "[ARMv8 Manual, Page 901](https://static.docs.arm.com/ddi0487/ca/DDI0487C_a_armv8_arm.pdf#page=901&zoom=auto,-4,387)") c (? . 0) c (? . 0) c (u . "```") c (? . 0) c (u . "31                  21 20             12 11 10 9     6           0") c (? . 0) c (u . "vv                   v v               v     v     vv          vv") c (? . 0) c (u . "'F'E'D'C'B'A'9'8'7'6'5'4'3'2'1'0 F E D C B A 9 8 7 6 5 4 3 2 1 0") c (? . 0) c (? . 0) c (u . " ") c (u . "1 1 1 1 1 0 0 0 0 0 0 [ imm          9] 1 1 [ Rn   5][ Rt    5]") c (? . 0) c (u . "```") c (? . 0) c (? . 0) c (u . "Reads the address `Rn + imm` from memory and stores it into `Rt`.") c (? . 0) c (? . 0) c (u . "```") c (? . 0) c (u . "Rt <- *(Rn + imm)") c (? . 0) c (u . "```") c (? . 0) c (? . 0) c (u . "#### Store, Post-Index") c (? . 0) c (u . "> [ARMv8 Manual, Page 901](https://static.docs.arm.com/ddi0487/ca/DDI0487C_a_armv8_arm.pdf#page=901&zoom=auto,-4,655)") c (? . 0) c (? . 0) c (? . 0) c (u . "Reads the address `Rn` from memory stores it into `Rt`, then updates `Rn` to `Rn + imm`.") c (? . 0) c (? . 0) c (u . "```") c (? . 0) c (u . "Rt <- *Rn") c (? . 0) c (u . "Rn <- Rn + imm") c (? . 0) c (u . "```")) c (c toc-entries c (c div c (c (c class c (u . "nav2"))) c (c a c (c (c href c (u . "#g3105"))) ? . 2)) c (c div c (c (c class c (u . "nav2"))) c (c a c (c (c href c (u . "#g3106"))) ? . 3)) c (c div c (c (c class c (u . "nav2"))) c (c a c (c (c href c (u . "#g3107"))) ? . 4)) c (c div c (c (c class c (u . "nav3"))) c (c a c (c (c href c (u . "#g3108"))) ? . 5))))))